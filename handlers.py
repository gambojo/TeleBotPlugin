"""
–ú–æ–¥—É–ª—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–ª–∞–≥–∏–Ω–∞
–°–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
"""

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from .keyboards import PluginKeyboardBuilder
from databases import DatabaseManager
from .services.service import Service

class PluginHandlers:
    """
    –ö–ª–∞—Å—Å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –ø–ª–∞–≥–∏–Ω–∞-—à–∞–±–ª–æ–Ω–∞
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: config - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–≥–∏–Ω–∞, plugin_name - –∏–º—è –ø–ª–∞–≥–∏–Ω–∞, db - –º–µ–Ω–µ–¥–∂–µ—Ä –ë–î
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: —ç–∫–∑–µ–º–ø–ª—è—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

    –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
        handlers = PluginHandlers(settings, "TEMPLATE", db)
        handlers.register(router)
    """

    def __init__(self, config, plugin_name: str, db: DatabaseManager):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            config: –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–≥–∏–Ω–∞
            plugin_name (str): –∏–º—è –ø–ª–∞–≥–∏–Ω–∞
            db (DatabaseManager): –º–µ–Ω–µ–¥–∂–µ—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: None
        """
        self.config = config
        self.plugin_name = plugin_name
        self.service = Service(db)

    def register(self, router: Router):
        """
        –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –≤ —Ä–æ—É—Ç–µ—Ä–µ
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: router (Router) - —Ä–æ—É—Ç–µ—Ä –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: None

        –ü—Ä–∏–º–µ—Ä:
            handlers.register(router)
        """
        router.callback_query.register(
            self.entry_callback,
            F.data == f"plugin:{self.plugin_name}"
        )

        router.callback_query.register(
            self.bt1,
            F.data == f"{self.plugin_name.lower()}:bt1"
        )

        router.callback_query.register(
            self.bt2,
            F.data == f"{self.plugin_name.lower()}:bt2"
        )

    async def entry_callback(self, callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞ –≤ –ø–ª–∞–≥–∏–Ω
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: callback (CallbackQuery) - callback –¥–∞–Ω–Ω—ã–µ
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: None

        –ü—Ä–∏–º–µ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è:
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É –ø–ª–∞–≥–∏–Ω–∞ ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–µ–Ω—é –ø–ª–∞–≥–∏–Ω–∞
        """
        text = "EntryPoint"
        keyboard = PluginKeyboardBuilder(self.config, self.plugin_name).plugin_menu().build_markup()
        await callback.message.edit_caption(caption=text, reply_markup=keyboard, parse_mode="HTML")

    async def bt1(self, callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ bt1 - –∑–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: callback (CallbackQuery) - callback –¥–∞–Ω–Ω—ã–µ
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: None

        –ü—Ä–∏–º–µ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è:
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "–ó–∞–ø–∏—Å–∞—Ç—å" ‚Üí –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –ë–î ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        """
        response = await self.service.create(123, 'bt1', 'Buton1')
        text = f"<b>–í–Ω–µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ:</b>\nID: {response.id}, –ó–∞–≥–æ–ª–æ–≤–æ–∫: {response.title}"
        keyboard = PluginKeyboardBuilder(self.config, self.plugin_name).plugin_menu().build_markup()
        await callback.message.edit_caption(caption=text, reply_markup=keyboard, parse_mode="HTML")

    async def bt2(self, callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ bt2 - —á—Ç–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: callback (CallbackQuery) - callback –¥–∞–Ω–Ω—ã–µ
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: None

        –ü—Ä–∏–º–µ—Ä —Å—Ü–µ–Ω–∞—Ä–∏—è:
            –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∏–º–∞–µ—Ç "–ü—Ä–æ—á–∏—Ç–∞—Ç—å" ‚Üí –¥–∞–Ω–Ω—ã–µ —á–∏—Ç–∞—é—Ç—Å—è –∏–∑ –ë–î ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫
        """
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î
            responses = await self.service.get(123)

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å—Ç—Ä–æ–∫—É
            if responses:
                text_lines = ["<b>–í–Ω–µ—Å–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</b>"]
                for response in responses:
                    text_lines.append(f"‚Ä¢ ID: {response.id}, –ó–∞–≥–æ–ª–æ–≤–æ–∫: {response.title}")
                text = "\n".join(text_lines)
            else:
                text = "üì≠ <b>–í –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π</b>"

            keyboard = PluginKeyboardBuilder(self.config, self.plugin_name).plugin_menu().build_markup()
            await callback.message.edit_caption(caption=text, reply_markup=keyboard, parse_mode="HTML")

        except Exception as e:
            self.logger.error(f"Error in bt2: {e}")
            await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö", show_alert=True)
